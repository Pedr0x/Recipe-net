import React from 'react'
import TextField from '@material-ui/core/TextField';
import Button from '@material-ui/core/Button';
import SearchIcon from '@material-ui/icons/Search';
import Box from '@material-ui/core/Box';
import axios from "axios"
import MainContainer from "../MainContainer/MainContainer";
import Checkbox from '@material-ui/core/Checkbox';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import Slider from '@material-ui/core/Slider';


class MainSearch extends React.Component {
	  constructor(props) {
    super(props);
    this.state = {
		recipes: [],
		favorites:[],
		alcoholFree:false,
		caloriesMax:null
		
	
		
	};
	    this.handleChange = this.handleChange.bind(this);
		  	    this.getFavorite = this.getFavorite.bind(this);
		  		  	    this.caloriesChanger = this.caloriesChanger.bind(this);
		  		  	    this.checkboxChange = this.checkboxChange.bind(this);

		  
		  this.myRef = React.createRef()
	  }
	
	
	  componentDidMount() {  
	
	 const appID = "8bc00f3b";
	const appKey = "b1d9d15dadbddc109d83b189b71e533f";
		let query = "chicken";
		 let isAlcoholFree = "" ;
	
	var getRecipes = async () => {
			if (this.state.alcoholFree == true){
			isAlcoholFree ="&health=alcohol-free";
				console.log("is alcoholfree")
		}
		const response = await fetch ( `https://api.edamam.com/search?q=${query}&app_id=${appID}&app_key=${appKey}${isAlcoholFree}`);
		const data = await response.json()
		//console.log(data.hits)
		//var a = data.hits[0].recipe;
		//console.log(a)
		
		this.setState({recipes: data.hits})
		
		console.log(this.state.recipes[0])
}

	
	getRecipes();
	}
	
	getFavorite(e){
			//	console.log(e.target.name);
e.stopPropagation()
		 let name = e.target.name;
//		let imgdata = e.target.imgdata;
		let imgdata = e.target.dataset.image;
		let newFavorite = {recipeName:name, image:imgdata}

		if (this.state.favorites.includes(name)){
			console.log("already had that recipe")
		} else {
		
					this.setState(({
      favorites:[  ...this.state.favorites,newFavorite]
    })); 
		
		let allFavorites = [...this.state.favorites, newFavorite]
		localStorage.setItem("favorites", JSON.stringify(newFavorite))
				console.log(allFavorites)

		}


	}

handleChange = (e) => {
//		this.setState({querssy: e.target.value})
	//	console.log(this.state.query)
				//this is probably wrong might need to fix later

			this.setState({recipes: []})

	 const appID = "8bc00f3b";
	const appKey = "b1d9d15dadbddc109d83b189b71e533f";
	var	isAlcoholFree = "";
				if (this.state.alcoholFree == true){
			isAlcoholFree ="&health=alcohol-free";
				console.log("is alcoholfree")
		}
	var howManyCalories = "";
		if(this.state.caloriesMax != null){
			howManyCalories = `&calories=0-${this.state.caloriesMax}`;
		}
	var getRecipes = async (query) => {
		const response = await fetch ( `https://cors-anywhere.herokuapp.com/https://api.edamam.com/search?q=${query}&app_id=${appID}&app_key=${appKey}${howManyCalories}${isAlcoholFree}`);
		const data = await response.json()
		//console.log(data.hits)
		//var a = data.hits[0].recipe;
		//console.log(a)
		this.setState({recipes: data.hits})
		console.log(this.state.recipes[0])
}
	getRecipes(e.target.value)
	}	

checkboxChange(e){
		console.log(e.target.checked);
		console.log(e.target.name)

this.setState({ [e.target.name] : e.target.checked });	
	
}

caloriesChanger(e){
	
	this.setState({ [e.target.name] : e.target.value });	

}
	render(){
		
	let mainSearchStyle = {
		width: "90%",
		display: "flex",	
		padding: "2%",
		justifyContent: "center"
	}


var {favorites} = this.state 
	
	return (
		<React.Fragment> 
		<Box onClick={() => console.log(this.state)}className="search-form-container"> 
	<form  className="search-form"   noValidate autoComplete="off" style={mainSearchStyle}>
 
  <TextField inputRef={this.myRef } onChange={this.handleChange} className="search-input" id="outlined-basic" label="Ex: Peanuts" variant="outlined" />
  <div className="checkbox-container">
  	<div> 
 	     <label> Alcohol Free</label>
  	     <input name="alcoholFree" onChange={this.checkboxChange} className="checkbox"type="checkbox"/>
  	</div>
  </div>
  <div className="calories-max">
  	<label> calories</label>
  	
<input onChange={this.caloriesChanger} name="caloriesMax" type="number"  min="1" max="30000"/>
 
  </div>
</form>
	
		</Box>
		
		<MainContainer data={this.state.recipes} getFavorite={this.getFavorite}/>
		</React.Fragment>
		
)
	
	
}

}
export  default MainSearch 